(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-img-fallback', ['exports', '@angular/core'], factory) :
    (global = global || self, factory(global['ngx-img-fallback'] = {}, global.ng.core));
}(this, function (exports, core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    var ImgFallbackDirective = /** @class */ (function () {
        function ImgFallbackDirective(el, renderer) {
            this.el = el;
            this.renderer = renderer;
            this.loaded = new core.EventEmitter();
            this.isApplied = false;
            this.ERROR_EVENT_TYPE = 'error';
            this.LOAD_EVENT_TYPE = 'load';
            this.nativeElement = el.nativeElement;
            this.onError = this.onError.bind(this);
            this.onLoad = this.onLoad.bind(this);
            this.addEvents();
        }
        ImgFallbackDirective.prototype.ngOnDestroy = function () {
            this.removeErrorEvent();
            this.removeOnLoadEvent();
        };
        ImgFallbackDirective.prototype.onError = function () {
            if (this.nativeElement.getAttribute('src') !== this.imgSrc) {
                this.isApplied = true;
                this.renderer.setAttribute(this.nativeElement, 'src', this.imgSrc);
            }
            else {
                this.removeOnLoadEvent();
            }
        };
        ImgFallbackDirective.prototype.onLoad = function () {
            this.loaded.emit(this.isApplied);
        };
        ImgFallbackDirective.prototype.removeErrorEvent = function () {
            if (this.cancelOnError) {
                this.cancelOnError();
            }
        };
        ImgFallbackDirective.prototype.removeOnLoadEvent = function () {
            if (this.cancelOnLoad) {
                this.cancelOnLoad();
            }
        };
        ImgFallbackDirective.prototype.addEvents = function () {
            this.cancelOnError = this.renderer.listen(this.nativeElement, this.ERROR_EVENT_TYPE, this.onError);
            this.cancelOnLoad = this.renderer.listen(this.nativeElement, this.LOAD_EVENT_TYPE, this.onLoad);
        };
        __decorate([
            core.Input('src-fallback'),
            __metadata("design:type", String)
        ], ImgFallbackDirective.prototype, "imgSrc", void 0);
        __decorate([
            core.Output('loaded'),
            __metadata("design:type", Object)
        ], ImgFallbackDirective.prototype, "loaded", void 0);
        ImgFallbackDirective = __decorate([
            core.Directive({
                selector: '[src-fallback]'
            }),
            __metadata("design:paramtypes", [core.ElementRef, core.Renderer2])
        ], ImgFallbackDirective);
        return ImgFallbackDirective;
    }());

    var ImgFallbackModule = /** @class */ (function () {
        function ImgFallbackModule() {
        }
        ImgFallbackModule = __decorate([
            core.NgModule({
                declarations: [ImgFallbackDirective],
                exports: [ImgFallbackDirective]
            })
        ], ImgFallbackModule);
        return ImgFallbackModule;
    }());

    exports.ImgFallbackDirective = ImgFallbackDirective;
    exports.ImgFallbackModule = ImgFallbackModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ngx-img-fallback.umd.js.map
